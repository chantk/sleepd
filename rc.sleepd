#!/bin/sh

# /etc/rc.d/rc.sleepd
<<<<<<< HEAD
# Start/stop/restart the sleepd daemon
=======
# Start/stop/restart the Wicd daemon
>>>>>>> master

PIDFILE="/var/run/sleepd.pid"
DAEMON="/usr/sbin/sleepd"

<<<<<<< HEAD
. /etc/sleepd.conf

# Define start and stop functions

sleepd_start() {
  [ $UID -eq 0 ] || exit 4
  if [ -e $PIDFILE ]; then
    echo "sleepd appears to already be running. If this is not the case,"
    echo "remove $PIDFILE and try again."
    exit 1
  else
    echo "Starting sleepd: $DAEMON"
    sleepd $PARAMS > /dev/null 2>&1
    ps -p `cat $PIDFILE` > /dev/null 2>&1
    if [ "$?" == 1 ]; then
      rm -f $PIDFILE
      echo "ERROR: $DAEMON failed to start."
      echo "ERROR: For more verbosity, run \"$DAEMON -n -v\" manually."
      echo "ERROR: Exiting..."
    fi
=======
# Define start and stop functions

sleepd_start() {
  if [ -e $PIDFILE ]; then
    echo "sleepd appears to already be running."
    echo "If this is not the case, then remove "
    echo "$PIDFILE and try again..."
    exit 1
  else
    echo "Starting sleepd: $DAEMON &"
    sleepd 2>/dev/null 1>&2 &
>>>>>>> master
  fi
}

sleepd_force_stop() {
<<<<<<< HEAD
  [ $UID -eq 0 ] || exit 4
=======
>>>>>>> master
  echo "Force stopping sleepd..."
  if [ -e $PIDFILE ]; then
    kill $(cat $PIDFILE) 2>/dev/null
    rm -f $PIDFILE 2>/dev/null
  else
    killall -9 sleepd 2>/dev/null
  fi
}

sleepd_stop() {
<<<<<<< HEAD
  [ $UID -eq 0 ] || exit 4
=======
>>>>>>> master
  echo "Stopping sleepd..."
  if [ -e $PIDFILE ]; then
    kill $(cat $PIDFILE) 2>/dev/null
    rm -f $PIDFILE 2>/dev/null
  fi
}

sleepd_status() {
  sleepctl status
}

<<<<<<< HEAD
# See how we were called and take appropriate action
=======
# See how we were called and take appropriate action	
>>>>>>> master

case $1 in
  start)
    sleepd_start
   ;;
  stop)
    sleepd_stop
   ;;
  force_stop)
    sleepd_force_stop
   ;;
  restart)
    sleepd_force_stop
    sleepd_start
   ;;
  status)
    sleepd_status
   ;;
  *)
<<<<<<< HEAD
    echo "Usage: $0 {start|stop|force_stop|restart|status}"
    exit 1
   ;;
esac
=======
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
   ;;
esac

>>>>>>> master
